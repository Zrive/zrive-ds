import requests
import numpy as np
import matplotlib.pyplot as plt
from datetime import datetime

API_URL = "https://climate-api.open-meteo.com/v1/climate?"
COORDINATES = {
    "Madrid": {"latitude": 40.416775, "longitude": -3.703790},
    "London": {"latitude": 51.507351, "longitude": -0.127758},
    "Rio": {"latitude": -22.906847, "longitude": -43.172896},
}
VARIABLES = "temperature_2m_mean,precipitation_sum,soil_moisture_0_to_10cm_mean"

def call_api(url, params):
    try:
        response = requests.get(url, params=params)
        response.raise_for_status()
        return response.json()
    except requests.exceptions.HTTPError as http_err:
        print(f"HTTP error occurred: {http_err}")
    except Exception as err:
        print(f"An error occurred: {err}")

def get_data_meteo_api(city, start_date, end_date):
    params = {
        'latitude': COORDINATES[city]['latitude'],
        'longitude': COORDINATES[city]['longitude'],
        'start_date': start_date,
        'end_date': end_date,
        'var': VARIABLES,
    }
    return call_api(API_URL, params)

def process_data(data):
    # Data es un diccionario que contiene un conjunto de datos
    # Ejemplo: data = {'temperature_2m_mean': [...], 'precipitation_sum': [...], ...}
    processed_data = {}
    for variable in VARIABLES.split(','):
        if variable in data:
            values = data[variable]
            processed_data[variable] = {
                'mean': np.mean(values),
                'std': np.std(values)
            }
    return processed_data

def plot_data(processed_data, city):
    # Processed data tiene una estructura tal que as√≠ {'temperature_2m_mean': {'mean': ..., 'std': ...}, ...}
    plt.figure(figsize=(10, 5))

    for variable in processed_data:
        plt.errorbar(x=list(range(len(processed_data[variable]['mean']))), 
                     y=processed_data[variable]['mean'], 
                     yerr=processed_data[variable]['std'], 
                     label=variable.replace('_', ' ').capitalize())

    plt.title(f'Climate Data for {city}')
    plt.xlabel('Year')
    plt.ylabel('Value')
    plt.legend()
    plt.grid(True)
    plt.show()

def main():
    start_date = "1950-01-01"
    end_date = "2050-01-01"

    for city in COORDINATES:
        print(f"Fetching data for {city}...")
        data = get_data_meteo_api(city, start_date, end_date)
        if data:
            print(f"Processing data for {city}...")
            processed_data = process_data(data)
            print(f"Plotting data for {city}...")
            plot_data(processed_data, city)

if __name__ == "__main__":
    main()
    #Prueba module1
    